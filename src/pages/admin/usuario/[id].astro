---
// Import necessary components and utilities
import AdminLayout from "@layouts/AdminLayout.astro";
import { getInfoUser, getPlotsUser, type Response } from "@utils/getInfoUser";
import MakeAdminButton from "@components/MakeAdminButton";
import BlockButton from "@components/BlockButton";
let myUser = false;

const id = (Astro.params.id as string).toString();
if (id === "undefined") {
  console.error("El ID de usuario es 'undefined'.");
  return;
}
if (id === "null") {
  console.error("El ID de usuario es 'null'.");
  return;
}

// Define user object
let user : any;

const cookiesUser = JSON.parse(Astro.cookies.get("user")?.value || "{}");
if (cookiesUser._id?.toString() === id.toString()) {
  myUser = true;
}
// Fetch parcelas (fields) info
let parcelas: Response[] = [];
const token = Astro.cookies.get("token")?.value || "";
try {
   const parcels = await getPlotsUser(token); 
   parcelas = parcels;
  const userData = await getInfoUser(id, token);
  user = userData;
} catch (error) {
  console.error("Error fetching parcelas:", error);
}
---

<AdminLayout>
  <div class="bg-white text-gray-800 flex flex-col items-center justify-start min-h-screen p-6 mt-6">
    <div class="flex flex-col items-center gap-4">
      <img
        src={user.profilePicture}
        alt={user.username}
        class="xl:w-52 xl:h-52 w-40 h-40  rounded-full shadow-lg object-cover border-4 border-primary-green"
      />
      <h1 class="text-4xl font-semibold">{user.username}</h1>
      <p class="text-xl font-semibold text-gray-600">{user.role}, {user.autonomousCommunity}</p>
      {
        user.isAdmin ? 
          <p class="text-xl font-semibold text-gray-600">Administrador</p>
        :
          <MakeAdminButton client:only="react" userId={user._id} token={token}/>
      }
      {
        !user.isBlocked && !user.isAdmin ?
        <BlockButton client:only="react" userId={user._id} token={token}/>
        :
        <p class="text-xl font-semibold text-red-600">Usuario Bloqueado</p>

      }
      {myUser &&
      <a
        href={`/editar-perfil`}
        class="bg-primary-green text-white px-4 py-2 rounded-lg shadow-md transition hover:scale-105 hover:shadow-lg"
      >
        Editar Perfil
      </a>}
    </div>
    <div class="mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 max-w-5xl w-full">
  {parcelas.map((parcela, index) => {
    const [lng, lat] = parcela.geometry?.features?.[1]?.geometry?.coordinates || [];

    return (
      <a
        href={`/parcela/${lat}${lng}`}
        class="bg-primary-green text-white p-6 lg:p-8 rounded-2xl shadow-md transition hover:scale-[1.02] hover:shadow-lg"
      >
        <h2 class="text-xl lg:text-2xl font-bold mb-4">Parcela</h2>

        <p class="text-sm lg:text-base opacity-90 mb-1">
          <span class="font-semibold">Municipio:</span> {parcela.municipalityName}
        </p>
        <p class="text-sm lg:text-base opacity-90 mb-1">
          <span class="font-semibold">Provincia:</span> {parcela.provinceName}
        </p>

        {lat && lng && (
          <div class="text-sm lg:text-base opacity-90 mb-1">
            <span class="font-semibold">Ubicaci√≥n:</span>
            <div class="ml-2">
              <p>Lat: {lat}</p>
              <p>Lng: {lng}</p>
            </div>
          </div>
        )}

        <p class="text-sm lg:text-base opacity-90">
          <span class="font-semibold">Cultivo:</span> {parcela.parcelUse}
        </p>
      </a>
    );
  })}
</div>

</AdminLayout>
